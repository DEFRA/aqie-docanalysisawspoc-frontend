{% extends 'layouts/page.njk' %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% block pageTitle %}Upload Policy Document{% endblock %}

{% block bodyAttributes %}{% if processingId %} data-processing-id="{{ processingId }}"{% endif %}{% endblock %}

{% block content %}
<h1 class="govuk-heading-m">Upload a Document to Generate AI-Powered Insights</h1>
<form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data" onsubmit="return handleCdpUpload();">
  <p style ="color:red"> DEBUG: Form action = {{ action }} </p>
  <div class="govuk-form-group">
    <fieldset class="govuk-fieldset">
      <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
        Prompt analysis type
      </legend>
      <div class="govuk-radios govuk-radios--inline">
        <div class="govuk-radios__item">
          <input class="govuk-radios__input" id="analysisType-red" name="analysisType" type="radio" value="red" {% if not analysisType or analysisType == 'red' %}checked{% endif %}>
          <label class="govuk-label govuk-radios__label" for="analysisType-red">
            Red book
          </label>
        </div>
        <div class="govuk-radios__item">
          <input class="govuk-radios__input" id="analysisType-green" name="analysisType" type="radio" value="green" {% if analysisType == 'green' %}checked{% endif %}>
          <label class="govuk-label govuk-radios__label" for="analysisType-green">
            Green book
          </label>
        </div>
      </div>
    </fieldset>
  </div>
  <div class="govuk-form-group">
    <label class="govuk-label" for="policyPdf">Select PDF file</label>
    <div class="file-selection-area">
      <input class="govuk-file-upload" id="policyPdf" name="policyPdf" type="file" accept="application/pdf" required>
      <div id="fileSpinner" class="spinner" style="display: none;"></div>
    </div>
  </div>
  {{ govukButton({ text: "Summarise", attributes: { type: "submit", id: "submitButton" } }) }}
  <div id="loadingMessage" class="govuk-inset-text" style="display: none;">
    <div class="spinner" style="display: inline-block; margin-right: 10px;"></div>
    Processing PDF... Please wait...
  </div>
</form>
<div id="fileInfo" style="margin-top:1em; display:none;">
  <strong>Selected file:</strong> <span id="fileName"></span>
</div>

<script>
function handleCdpUpload() {
  document.getElementById('submitButton').disabled = true;
  document.getElementById('loadingMessage').style.display = 'block';
 
  // Start polling after form submission
  setTimeout(() => {
    console.log('Starting to poll upload status...');
    pollUploadStatus();
  }, 2000);
 
  return true;
}
 
function pollUploadStatus() {
     console.log('inside: pollUploadStatus(): Starting to poll upload status...');
  const statusUrl = '{{ statusUrl }}';
  const analysisType = '{{ analysisType }}';
  const model = '{{ model }}';
 
  const poll = async () => {
    try {
      const response = await fetch(`/upload_status/poll-status?statusUrl=${encodeURIComponent(statusUrl)}&analysisType=${analysisType}&model=${model}`);
      const data = await response.json();
     
      if (data.status === 'ready') {
        document.getElementById('loadingMessage').innerHTML =
          '<div class="spinner" style="display: inline-block; margin-right: 10px;"></div>File ready! Starting analysis...';
       
        // Trigger processing
        window.location.href = `/process-s3-file?s3Key=${data.s3Key}&analysisType=${analysisType}&model=${model}`;
        return;
      }
     
      if (data.status === 'failed') {
        document.getElementById('loadingMessage').innerHTML = 'Upload failed. Please try again.';
        document.getElementById('submitButton').disabled = false;
        return;
      }
     
      // Continue polling
      setTimeout(poll, 3000);
    } catch (error) {
      console.error('Polling error:', error);
      setTimeout(poll, 5000);
    }
  };
 
  poll();
}
 
</script>
{% endblock %}