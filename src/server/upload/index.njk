{% extends 'layouts/page.njk' %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% block pageTitle %}Upload Policy Document{% endblock %}

{% block bodyAttributes %}{% if processingId %} data-processing-id="{{ processingId }}"{% endif %}{% endblock %}

{% block content %}
<h1 class="govuk-heading-m">Upload a Document to Generate AI-Powered Insights</h1>
<form id="uploadForm" action="/cdp-upload" method="post" enctype="multipart/form-data" onsubmit="return handleUploadSubmit();">
  <div class="govuk-form-group">
    <fieldset class="govuk-fieldset">
      <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
        Prompt analysis type
      </legend>
      <div class="govuk-radios govuk-radios--inline">
        <div class="govuk-radios__item">
          <input class="govuk-radios__input" id="analysisType-red" name="analysisType" type="radio" value="red" {% if not analysisType or analysisType == 'red' %}checked{% endif %}>
          <label class="govuk-label govuk-radios__label" for="analysisType-red">
            Red book
          </label>
        </div>
        <div class="govuk-radios__item">
          <input class="govuk-radios__input" id="analysisType-green" name="analysisType" type="radio" value="green" {% if analysisType == 'green' %}checked{% endif %}>
          <label class="govuk-label govuk-radios__label" for="analysisType-green">
            Green book
          </label>
        </div>
      </div>
    </fieldset>
  </div>
  <div class="govuk-form-group">
    <label class="govuk-label" for="policyPdf">Select PDF file</label>
    <div class="file-selection-area">
      <input class="govuk-file-upload" id="policyPdf" name="policyPdf" type="file" accept="application/pdf" required>
      <div id="fileSpinner" class="spinner" style="display: none;"></div>
    </div>
  </div>
  {{ govukButton({ text: "Summarise", attributes: { type: "submit", id: "submitButton" } }) }}
  <div id="loadingMessage" class="govuk-inset-text" style="display: none;">
    <div class="spinner" style="display: inline-block; margin-right: 10px;"></div>
    Processing PDF... Please wait...
  </div>
</form>
<div id="fileInfo" style="margin-top:1em; display:none;">
  <strong>Selected file:</strong> <span id="fileName"></span>
</div>



<script>
function handleUploadSubmit() {
  const form = document.getElementById('uploadForm');
  const submitButton = document.getElementById('submitButton');
  const loadingMessage = document.getElementById('loadingMessage');
  const fileInput = document.getElementById('policyPdf');
  const analysisType = document.querySelector('input[name="analysisType"]:checked').value;
  const model = '{{ model }}';
  
  if (!fileInput.files[0]) {
    alert('Please select a PDF file');
    return false;
  }
  
  submitButton.disabled = true;
  loadingMessage.style.display = 'block';
  
  // Add query parameters to form action
  form.action = `/cdp-upload?analysisType=${analysisType}&model=${model}`;
  
  return true;
}

// Handle upload status from URL parameters
window.addEventListener('DOMContentLoaded', function() {
  const urlParams = new URLSearchParams(window.location.search);
  const status = urlParams.get('status');
  const message = urlParams.get('message');
  
  if (status === 'uploaded') {
    document.getElementById('loadingMessage').innerHTML = 
      '<div class="spinner" style="display: inline-block; margin-right: 10px;"></div>File uploaded successfully. Virus scanning in progress...';
    document.getElementById('loadingMessage').style.display = 'block';
    
    // You can implement status polling here to check when virus scanning is complete
    // and then trigger document processing
  } else if (status === 'error') {
    const errorDiv = document.createElement('div');
    errorDiv.className = 'govuk-error-summary';
    errorDiv.innerHTML = `<div class="govuk-error-summary__body"><p>${message || 'Upload failed'}</p></div>`;
    document.querySelector('form').insertBefore(errorDiv, document.querySelector('form').firstChild);
  }
});
</script>

{% endblock %}