{% extends 'layouts/page.njk' %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% block pageTitle %}Upload Policy Document{% endblock %}

{% block content %}
<h1 class="govuk-heading-m">Upload a Document to Generate AI-Powered Insights</h1>
<form id="cdpUploadForm" action="{{ uploadUrl }}" method="post" enctype="multipart/form-data" onsubmit="return handleCdpUpload();">
  <div class="govuk-form-group">
    <label class="govuk-label" for="file">Select PDF file</label>
    <input class="govuk-file-upload" id="file" name="file" type="file" accept="application/pdf" required>
  </div>
  {{ govukButton({ text: "Upload", attributes: { type: "submit", id: "submitButton" } }) }}
  <div id="loadingMessage" class="govuk-inset-text" style="display: none;">
    <div class="spinner" style="display: inline-block; margin-right: 10px;"></div>
    Uploading and scanning file... Please wait...
  </div>
</form>

<script>
function handleCdpUpload() {
  document.getElementById('submitButton').disabled = true;
  document.getElementById('loadingMessage').style.display = 'block';
  
  // Start polling after form submission
  setTimeout(() => {
    pollUploadStatus();
  }, 2000);
  
  return true;
}

function pollUploadStatus() {
  const statusUrl = '{{ statusUrl }}';
  const analysisType = '{{ analysisType }}';
  const model = '{{ model }}';
  
  const poll = async () => {
    try {
      const response = await fetch(`/cdp-upload/poll-status?statusUrl=${encodeURIComponent(statusUrl)}&analysisType=${analysisType}&model=${model}`);
      const data = await response.json();
      
      if (data.status === 'ready') {
        document.getElementById('loadingMessage').innerHTML = 
          '<div class="spinner" style="display: inline-block; margin-right: 10px;"></div>File ready! Starting analysis...';
        
        // Trigger processing
        window.location.href = `/process-s3-file?s3Key=${data.s3Key}&analysisType=${analysisType}&model=${model}`;
        return;
      }
      
      if (data.status === 'failed') {
        document.getElementById('loadingMessage').innerHTML = 'Upload failed. Please try again.';
        document.getElementById('submitButton').disabled = false;
        return;
      }
      
      // Continue polling
      setTimeout(poll, 3000);
    } catch (error) {
      console.error('Polling error:', error);
      setTimeout(poll, 5000);
    }
  };
  
  poll();
}
</script>

{% endblock %}