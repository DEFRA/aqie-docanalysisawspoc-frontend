{% extends 'layouts/page.njk' %}

{% block pageTitle %}Analysis Status{% endblock %}

{% block content %}
<div class="govuk-back-link">
  <a href="/upload" class="govuk-back-link">Back to Upload</a>
</div>

<h1 class="govuk-heading-m">Document Analysis Status</h1>

{% if markdownContent %}
<div id="markdownContent" class="govuk-body markdown-content" style="margin-top: 2em;">
  <h2 class="govuk-heading-m">Analysis Results</h2>
  <div id="markdownRenderer">
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const markdownContent = `{{ markdownContent | safe }}`;
        document.getElementById('markdownRenderer').innerHTML = marked.parse(markdownContent);
        
        // Apply GOV.UK styling to tables
        document.querySelectorAll('#markdownRenderer table').forEach((table) => {
          table.classList.add('govuk-table');
          table.querySelectorAll('thead').forEach((thead) => {
            thead.classList.add('govuk-table__head');
          });
          table.querySelectorAll('tbody').forEach((tbody) => {
            tbody.classList.add('govuk-table__body');
          });
          table.querySelectorAll('th').forEach((th) => {
            th.classList.add('govuk-table__header');
          });
          table.querySelectorAll('td').forEach((td) => {
            td.classList.add('govuk-table__cell');
          });
        });
      });
    </script>
  </div>
</div>
{% else %}
<div class="govuk-inset-text">
  <div class="spinner" style="display: inline-block; margin-right: 10px;"></div>
  {{ markdownContent or 'Processing your document analysis... Please wait while we fetch the results from our AI service.' }}
</div>
{% endif %}

<div id="errorMessage" class="govuk-error-summary" style="display: none;">
  <div class="govuk-error-summary__body">
    <p id="errorText"></p>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const requestId = '{{ requestId }}';
  const status = '{{ status }}';
  
  if (status === 'polling') {
    function pollProgress() {
      fetch(`/progress/${requestId}`)
        .then(response => response.json())
        .then(data => {
          if (data.status === 'complete') {
            location.reload(); // Reload page to show results
          } else {
            setTimeout(pollProgress, 5000);
          }
        })
        .catch(() => setTimeout(pollProgress, 5000));
    }
    
    pollProgress();
  }
});
</script>

{% endblock %}